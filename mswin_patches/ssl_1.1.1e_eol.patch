diff --git a/ext/openssl/ossl_ssl.c b/ext/openssl/ossl_ssl.c
index 34bb636ead..8af58e33c6 100644
--- a/ext/openssl/ossl_ssl.c
+++ b/ext/openssl/ossl_ssl.c
@@ -1896,7 +1896,17 @@ ossl_ssl_read_internal(int argc, VALUE *argv, VALUE self, int nonblock)
 			rb_eof_error();
 		    }
 		}
-                /* fall through */
+		/* fall through */
+#ifdef SSL_R_UNEXPECTED_EOF_WHILE_READING
+	    case SSL_ERROR_SSL:
+		/* defined for OpenSSL versions 1.1.1e and later */
+		if (OpenSSL_version_num() >= 0x1010105fL &&
+		    ERR_GET_REASON(ERR_peek_last_error()) == SSL_R_UNEXPECTED_EOF_WHILE_READING) {
+		    rb_eof_error();
+		    continue;
+		}
+		/* fall through */
+#endif
 	    default:
 		ossl_raise(eSSLError, "SSL_read");
 	    }
diff --git a/test/openssl/test_ssl.rb b/test/openssl/test_ssl.rb
index 4598927a17..ce899ba085 100644
--- a/test/openssl/test_ssl.rb
+++ b/test/openssl/test_ssl.rb
@@ -1398,13 +1398,8 @@ def test_npn_selected_protocol_too_long
     }
   end
 
-  def readwrite_loop_safe(ctx, ssl)
-    readwrite_loop(ctx, ssl)
-  rescue OpenSSL::SSL::SSLError
-  end
-
   def test_close_after_socket_close
-    start_server(server_proc: method(:readwrite_loop_safe)) { |port|
+    start_server { |port|
       sock = TCPSocket.new("127.0.0.1", port)
       ssl = OpenSSL::SSL::SSLSocket.new(sock)
       ssl.connect
