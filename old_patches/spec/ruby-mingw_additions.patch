Patch by MSP-Greg
Add spec tests that pass on newer MinGW builds
diff --git a/spec/ruby/core/array/pack/l_spec.rb b/spec/ruby/core/array/pack/l_spec.rb
index 0a5552b984..f8c6ccaf29 100644
--- a/spec/ruby/core/array/pack/l_spec.rb
+++ b/spec/ruby/core/array/pack/l_spec.rb
@@ -29,7 +29,7 @@
     it_behaves_like :array_pack_32bit_be, 'L>'
   end
 
-  guard -> { platform_is wordsize: 32 or platform_is :mingw32 } do
+  guard -> { platform_is wordsize: 32 } do
     describe "with modifier '<' and '_'" do
       it_behaves_like :array_pack_32bit_le, 'L<_'
       it_behaves_like :array_pack_32bit_le, 'L_<'
@@ -51,7 +51,7 @@
     end
   end
 
-  guard -> { platform_is wordsize: 64 and platform_is_not :mingw32 } do
+  guard -> { platform_is wordsize: 64 } do
     describe "with modifier '<' and '_'" do
       it_behaves_like :array_pack_64bit_le, 'L<_'
       it_behaves_like :array_pack_64bit_le, 'L_<'
@@ -83,7 +83,7 @@
     it_behaves_like :array_pack_32bit_be, 'l>'
   end
 
-  guard -> { platform_is wordsize: 32 or platform_is :mingw32 } do
+  guard -> { platform_is wordsize: 32 } do
     describe "with modifier '<' and '_'" do
       it_behaves_like :array_pack_32bit_le, 'l<_'
       it_behaves_like :array_pack_32bit_le, 'l_<'
@@ -105,7 +105,7 @@
     end
   end
 
-  guard -> { platform_is wordsize: 64 and platform_is_not :mingw32 } do
+  guard -> { platform_is wordsize: 64 } do
     describe "with modifier '<' and '_'" do
       it_behaves_like :array_pack_64bit_le, 'l<_'
       it_behaves_like :array_pack_64bit_le, 'l_<'
@@ -137,7 +137,7 @@
     it_behaves_like :array_pack_32bit_le, 'l'
   end
 
-  guard -> { platform_is wordsize: 32 or platform_is :mingw32 } do
+  guard -> { platform_is wordsize: 32 } do
     describe "Array#pack with format 'L' with modifier '_'" do
       it_behaves_like :array_pack_32bit_le, 'L_'
     end
@@ -155,7 +155,7 @@
     end
   end
 
-  guard -> { platform_is wordsize: 64 and platform_is_not :mingw32 } do
+  guard -> { platform_is wordsize: 64 } do
     describe "Array#pack with format 'L' with modifier '_'" do
       it_behaves_like :array_pack_64bit_le, 'L_'
     end
@@ -183,7 +183,7 @@
     it_behaves_like :array_pack_32bit_be, 'l'
   end
 
-  guard -> { platform_is wordsize: 32 or platform_is :mingw32 } do
+  guard -> { platform_is wordsize: 32 } do
     describe "Array#pack with format 'L' with modifier '_'" do
       it_behaves_like :array_pack_32bit_be, 'L_'
     end
@@ -201,7 +201,7 @@
     end
   end
 
-  guard -> { platform_is wordsize: 64 and platform_is_not :mingw32 } do
+  guard -> { platform_is wordsize: 64 } do
     describe "Array#pack with format 'L' with modifier '_'" do
       it_behaves_like :array_pack_64bit_be, 'L_'
     end
diff --git a/spec/ruby/core/float/round_spec.rb b/spec/ruby/core/float/round_spec.rb
index e04b376c36..df113f97b1 100644
--- a/spec/ruby/core/float/round_spec.rb
+++ b/spec/ruby/core/float/round_spec.rb
@@ -10,11 +10,9 @@
     0.0.round.should == 0
   end
 
-  platform_is_not :mingw32 do
-    it "returns the nearest Integer for Float near the limit" do
-      0.49999999999999994.round.should == 0
-      -0.49999999999999994.round.should == 0
-    end
+  it "returns the nearest Integer for Float near the limit" do
+    0.49999999999999994.round.should == 0
+    -0.49999999999999994.round.should == 0
   end
 
   it "raises FloatDomainError for exceptional values" do
diff --git a/spec/ruby/core/string/unpack/l_spec.rb b/spec/ruby/core/string/unpack/l_spec.rb
index 6f9fcd4fd0..61828b8a45 100644
--- a/spec/ruby/core/string/unpack/l_spec.rb
+++ b/spec/ruby/core/string/unpack/l_spec.rb
@@ -14,7 +14,7 @@
     it_behaves_like :string_unpack_32bit_be_unsigned, 'L>'
   end
 
-  guard -> { platform_is wordsize: 32 or platform_is :mingw32 } do
+  guard -> { platform_is wordsize: 32 } do
     describe "with modifier '<' and '_'" do
       it_behaves_like :string_unpack_32bit_le, 'L<_'
       it_behaves_like :string_unpack_32bit_le, 'L_<'
@@ -44,7 +44,7 @@
     end
   end
 
-  guard -> { platform_is wordsize: 64 and platform_is_not :mingw32 } do
+  guard -> { platform_is wordsize: 64 } do
     describe "with modifier '<' and '_'" do
       it_behaves_like :string_unpack_64bit_le, 'L<_'
       it_behaves_like :string_unpack_64bit_le, 'L_<'
@@ -86,7 +86,7 @@
     it_behaves_like :string_unpack_32bit_be_signed, 'l>'
   end
 
-  guard -> { platform_is wordsize: 32 or platform_is :mingw32 } do
+  guard -> { platform_is wordsize: 32 } do
     describe "with modifier '<' and '_'" do
       it_behaves_like :string_unpack_32bit_le, 'l<_'
       it_behaves_like :string_unpack_32bit_le, 'l_<'
@@ -116,7 +116,7 @@
     end
   end
 
-  guard -> { platform_is wordsize: 64 and platform_is_not :mingw32 } do
+  guard -> { platform_is wordsize: 64 } do
     describe "with modifier '<' and '_'" do
       it_behaves_like :string_unpack_64bit_le, 'l<_'
       it_behaves_like :string_unpack_64bit_le, 'l_<'
@@ -160,7 +160,7 @@
     it_behaves_like :string_unpack_32bit_le_signed, 'l'
   end
 
-  guard -> { platform_is wordsize: 32 or platform_is :mingw32 } do
+  guard -> { platform_is wordsize: 32 } do
     describe "String#unpack with format 'L' with modifier '_'" do
       it_behaves_like :string_unpack_32bit_le, 'L_'
       it_behaves_like :string_unpack_32bit_le_unsigned, 'L_'
@@ -182,7 +182,7 @@
     end
   end
 
-  guard -> { platform_is wordsize: 64 and platform_is_not :mingw32 } do
+  guard -> { platform_is wordsize: 64 } do
     describe "String#unpack with format 'L' with modifier '_'" do
       it_behaves_like :string_unpack_64bit_le, 'L_'
       it_behaves_like :string_unpack_64bit_le_unsigned, 'L_'
@@ -218,7 +218,7 @@
     it_behaves_like :string_unpack_32bit_be_signed, 'l'
   end
 
-  guard -> { platform_is wordsize: 32 or platform_is :mingw32 } do
+  guard -> { platform_is wordsize: 32 } do
     describe "String#unpack with format 'L' with modifier '_'" do
       it_behaves_like :string_unpack_32bit_be, 'L_'
       it_behaves_like :string_unpack_32bit_be_unsigned, 'L_'
@@ -240,7 +240,7 @@
     end
   end
 
-  guard -> { platform_is wordsize: 64 and platform_is_not :mingw32 } do
+  guard -> { platform_is wordsize: 64 } do
     describe "String#unpack with format 'L' with modifier '_'" do
       it_behaves_like :string_unpack_64bit_be, 'L_'
       it_behaves_like :string_unpack_64bit_be_unsigned, 'L_'
diff --git a/spec/ruby/optional/capi/time_spec.rb b/spec/ruby/optional/capi/time_spec.rb
index 4a59c98100..1191ceabd2 100644
--- a/spec/ruby/optional/capi/time_spec.rb
+++ b/spec/ruby/optional/capi/time_spec.rb
@@ -165,7 +165,7 @@
       usec.should == 500000
     end
 
-    platform_is_not :mingw32 do
+    guard -> { platform_is_not :mingw or ruby_version_is '2.5' } do
       it "creates a timeval for a negative Fixnum" do
         sec, usec = @s.rb_time_timeval(-1232141421)
         sec.should be_kind_of(Integer)
@@ -224,7 +224,7 @@
       nsec.should == 500000000
     end
 
-    platform_is_not :mingw32 do
+    guard -> { platform_is_not :mingw or ruby_version_is '2.5' } do
       it "creates a timespec for a negative Fixnum" do
         sec, nsec = @s.rb_time_timespec(-1232141421)
         sec.should be_kind_of(Integer)
